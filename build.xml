<project name="ligtran" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
    Ligature encoder &amp; decoder
  </description>
  <tstamp prefix="my">
    <format property="TODAY" pattern="yyyy-MM-dd hh:mm" locale="en,UK"/>
  </tstamp>
  <property file="build.properties" />
  <property file="build.default.properties" />
  <property name="build.sysclasspath" value="ignore" />
  <property name="build.classes.dir" value="${build.dir}/classes" />
  <property name="ivy.lib.dir" value="${lib.dir}" />
  <available property="ivy.present"    classname="org.apache.ivy.Ivy" />

  <!-- paths used for compilation and run  -->
  <path id="lib.path.id">
    <fileset dir="${lib.dir}" />
  </path>
  <path id="run.path.id">
    <path refid="lib.path.id" />
    <path location="${build.classes.dir}" />
  </path>

  <target name="resolve" description="retrieve dependencies with ivy" if="ivy.present">
    <ivy:retrieve />
  </target>

  <target name="init" depends="resolve">
    <tstamp/>
    <echo level="info" message="ivy.present=${ivy.present}" />
    <mkdir dir="${build.classes.dir}" />
  </target>

  <target name="compile" depends="init"
          description="compile the sources">
    <depend srcdir="${src.dir}" destdir="${build.classes.dir}" cache="${build.dir}/dependencycache" closure="no">
      <include name="**/*.java"/>
    </depend>
    <javac destdir="${build.classes.dir}" deprecation="yes" listfiles="yes" debug="yes" encoding="UTF-8" classpathref="run.path.id">
      <src path="${src.dir}/test/java" />
      <src path="${src.dir}/main/java" />
      <compilerarg value="-Xlint:unchecked" />
    </javac>
  </target>

  <target name="dist" depends="compile"
          description="generate the distribution">
    <mkdir dir="${dist.dir}" />
    <jar jarfile="${dist.dir}/${ant.project.name}.jar">
      <fileset dir="${build.classes.dir}" />
      <manifest>
        <attribute name="Main-Class" value="com.github.whym.ligtran.servlet.LigatureServlet"/>
        <attribute name="Implementation-Version" value="${my.TODAY}" />
      </manifest>
    </jar>
  </target>

  <target name="war" depends="compile">
    <mkdir dir="${war.dir}/WEB-INF" />
    <copy todir="${war.dir}">
      <fileset dir="${src.dir}/main/webapp" />
    </copy>
    <copy todir="${war.dir}/WEB-INF/classes">
      <fileset dir="${build.classes.dir}" />
    </copy>
    <copy todir="${war.dir}/WEB-INF/lib">
      <fileset dir="${lib.dir}">
        <include name="*.jar" />
      </fileset>
    </copy>
  </target>

  <target name="test" depends="compile"
          description="run unit tests">
    <mkdir dir="${reports.dir}" />
    <junit printsummary="on" showoutput="yes" fork="yes" haltonfailure="no">
      <formatter type="xml" />
      <assertions>
        <enable package="com.github.whym.ligtran" />
      </assertions>
      <classpath refid="run.path.id" />
      <formatter type="plain" />
      <batchtest fork="yes" todir="${reports.dir}">
        <fileset dir="${src.dir}/test/java">
          <include name="test/**/Test*.java" />
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${reports.dir}">
      <fileset dir="${reports.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${reports.dir}/html"/>
    </junitreport>
  </target>

  <target name="javadoc" depends="init">
    <javadoc packagenames="com.github.whym.ligtran.*,com.github.whym.ligtran.servlet.*"
             sourcepath="${src.dir}/main/java"
             classpathref="run.path.id"
             destdir="${build.dir}/docs"
             use="yes"
             linksource="yes"
             encoding="UTF-8"
             charset="UTF-8"
             docencoding="UTF-8"
             windowtitle="Ligtran API Documentation"
             doctitle="Ligtran API Documentation"
             bottom="Copyright &amp;copy; 2010 Whym.  All Rights Reserved."
             >
      </javadoc>
  </target>

  <target name="clean" description="clean up">
    <delete dir="${build.classes.dir}" />
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
    <delete dir="${war.dir}" />
    <delete dir="${reports.dir}" />
  </target>
  <target name="clean-cache" description="clean the ivy cache">
    <ivy:cleancache />
  </target>
</project>
